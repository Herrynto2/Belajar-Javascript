#Javascript Data Type
    "Is kinds of data that can be saved into variable (var)."
    1. Number (Integer) 
    2. String (Text)
    3. Float (Decimal)
    4. Boolean (True False)
    5. Array
    6. Object
    7. Function
    8. Undefined (variabel yang sudah dideklarasi tapi belum di definiskikan)
       var c = undefined;

#variable
    "Is a place has name, used for saving values"
    var, let, const
    Step :
    Declaration (Mendaftarkan variabel ke dalam lingkup yang sesuai)
    Inisialisasi (Menyediakan memori untuk variabel)
    Assigment (Menetapkan nilai yang spesifik ke dalam variabel)
    ex : var nama; //deklarasi dan Inisialisasi
         nama = "heri" // Assignment
    shorthand : var nama = "heri",
                    umur = "21";

#Console
   "To display in firefox console via inspect element"
    console.log("Isi")

#Popup Box
   "Is a small window at browser that used as interaction between user and web"
    1. alert("String");                        to displaying massage
    2. prompt("String");                       to displaying choosen
       var x = prompt("String :")          to saving input into var x 
    3. confirm("String");                      to displaying confirm true or false

#Operator
    "Is a symbol that used to doing operate."
    A. Binary
       Need 2 Operand (operand1 + operand2)
       1. Aritmathic
          +, -, *, /, %(modulus/sisa pembagian)
       2. Assignment (penugasan)
          =, +=(menjumlahkan), -=, *=, /=, %=  
          ex : x = 10, x += 5, 15
       3. Comparison (perbandingan)
          == (membandingkan nilai), != (tidak sama dengan), === (membandingkan nilai dan tipe data), !==
          > (lebih besar), < (kurang), <=, >=
          ex : 10 == 10, True
       4. Logic
          && (AND), || (OR), ! (NOT)
       5. String
          ex ; x = "string"
    
    B. Ternary
       Need 3 Operand 
       1. Conditional
       (Condition) ? true : false
       ex : (x*2 == 0) ? "genap : ganjil, ganjil
    C. Unary
       Need 1 Operand (operator operand)
       1. Typeof
       for know what kind of data type is used 
       ex : typeof(10), Number

#Number
    1. Number without Decimal
       ex : 10, 1500, 12345
       Accurate until 15 digits 
    2. Number with Decimal
       ex : 3.14, 0.500
       Accurate until 17 digits 
    3. Eksponen
       ex : 123e5 -> 12300000
    4. Negative Number
       ex : -10
    5. Special Number
       - Infinity -> 2/0 = Infinity 
       - (-Infinity) -> -2/0 = -Infinity
       - NaN -> 0/0, 100/"string"

#String
    "Nama" / 'Nama'
    Escape Character
    \0 -> Null       \' -> '
    \" -> "          \\ -> \
    \n -> newline    \t -> tab
    \b -> backspace  \uxxxx -> unicode
    ex :
    - x = "String"
    - "String + String" -> StringString
    - "String".lenght -> 6 (to counting lenght a string)


#Boolean    
    True or False
    ex :
    Boolean(10 < 20) -> true
    var x = 10, x < 20 -> true
    "String" == "string" -> false

#Condition If Else
    if (x == y) {
    }
    else if (x == z){
    }
    else {
    }
    Note :
      == (Membandingkan nilai) / === (Membandingkan nilai dan type data)
      parseInt(prompt("String")); (change string to integer)

#Condition Switch Case
    switch(ekspresi) {
       case "1":
       aksi 1
       {break;}
       case "2":
       aksi 2
       {break;}
       case "n":
       aksi n
       {break;}
       default:
       aksi default
       {break;}
    }

#Looping While
      var x = "value"
      while (x > value) {
      ...
         x ++
      }

#Looping For
      for (x = 0; x < array.length; x++) {
      ...
      }

#Function
      - Sub program yang dapat dipanggil di program lain
      - Struktur dasar pembentuk JS
      - Build in function : Bawaan JS
            - Popoup : Alert(), prompt(), confirm()
            - String : charArt(), slice(), split(), toString(), toLowerCase, toUpperCase()
            - Math : Math.sin(), Math.cos(), Math.random(), Math.round(), Math.floor(), Math.ceil(), Math.log()

      - User defined function : Buatan sendiri
            - Exp
                  function nama(parameter) {    return ... ;}
                  console.log(nama(argument))
            - Parameter        : var didalam kurung function
                                 jika parameter > dari argument maka parameter terakhir di undifined 
            - Argument         : nilai yang dikirimkan ke parameter saat function dipanggil 
                                 jika argument > parameter maka argument terakhir akan diabaikan
            - Arguments        : array yang berisi banyak nilai yang dikirimkan saat function dipanggil
                                 Bisa menangani parameter yang kosong

      - Function Scope      : lokal function tidak bisa memanggil global function
                              global function tidak bisa mengintip ke lokal funtion
      - Function Rekursif   : Function yang memanggil dirinya sendiri
                              Sebagai pengganti looping 
      - Function Expression : Function yang berada dalam variabel dan nama optional
                              Harus dideklarasikan dulu baru dipanggil
                              Lebih digunakan di JS lanjutan
                              Exp : var tampil = function (a) { body}

                           

      http://www.3schools.com/jsref/jsref_obj_sring.asp

#Array  
      - Variabel yang bisa menampung lebih dari satu nilai   :  var x = [0, 1, 2, 4]
      - Pasangan antara Key dan Value                        :  var x[0] = "senin"
      - Boleh memiliki tipe data yang beda                   :  var x = [12, "senin", true]
      - array bukan tipe data tapi bertipe object            :  console.log(x[4])
      - array dalam array (multidimensi)                     :  var x = [0, 1, 2, [0, 1, 2]]
                                                                var x[3][1] = "senin"
      - Method Array 
         - Length : Untuk menghitung jumlah isi adalam array   : console.log(x.lenght )   
         - Join   : Untuk menampilkan index array dgn rapih    : console.log(x.join() )
         - Push   : add element baru di akhir array            : x.push("senin", "selasa")
         - Pop    : Delete element terakhir array              : x.pop()
         - Unshift: add element baru di awal array             : x.unshift("senin")
         - Shift  : delete element di awal array               : x.shift()
         - Splice : Menyisipkan element ditengah2              : x.splice(keyawal, maudihapus?, elementbaru1, ...)
         - Slice  : Memotong element di tengah array           : x.slice(awal, akhir)
         - ForEach: Menampilin setiap element pada array       : x.forEach(parameter, key)
                    tidak bisa kembaliin nilai array
         - Map    : Mirip dengan foreach tapi bisa             : x.map()
                    bisa mengembalikan nilai array
         - Sort   : Mengurutkan array yang acak                : x.sort()
         - Filter : Mencari element lebih dari satu            : x.filter()
                    bisa mengembalikan nilai array             
         - Find   : Mencari satu element                       : x.find()
                    tidak bisa kembaliin nilai array
         - Includes : Cek apakah data sudah ada di array       : x.includes()
         - Reduce : Mejumlah atau mengurangi isi pada array    : var hasil = array.reduce(function(total, number) {
                                                                   return total - number; }) 
         - Concat : Menggabungkan 2 atau lebih array jadi satu : var array = array1.concat(array2);

#Object 
      - Array yang key nya memiliki nama                    : var mhs = { nama  : "Heri",
                                                                             kelas : "6CC"
                                                                           }
      - Cara nampilin                                       : console.log(mhs.nama) / console.log(mhs["nama"])
      - Cara membuat object
         - Object Literal
         - Function Declaration
         - Function Constraction
         - Object.create()
      - This 
          Untuk mengglobalkan variabel ke dalam function object      :  this.mhs

            
            
            

